Terminals unused in grammar

    PP_ERROR


Grammar

    0 $accept: format $end

    1 format: format format_term
    2       | format_term

    3 format_term: PP_CONFIG ':' bits
    4            | PP_CONFIG PP_VALUE ':' bits

    5 bits: bits ',' bit_term
    6     | bit_term

    7 bit_term: PP_VALUE '-' PP_VALUE
    8         | PP_VALUE


Terminals, with rules where they appear

    $end (0) 0
    ',' (44) 5
    '-' (45) 7
    ':' (58) 3 4
    error (256)
    PP_CONFIG (258) 3 4
    PP_VALUE <num> (259) 4 7 8
    PP_ERROR (260)


Nonterminals, with rules where they appear

    $accept (9)
        on left: 0
    format (10)
        on left: 1 2
        on right: 0 1
    format_term (11)
        on left: 3 4
        on right: 1 2
    bits <bits> (12)
        on left: 5 6
        on right: 3 4 5
    bit_term <bits> (13)
        on left: 7 8
        on right: 5 6


State 0

    0 $accept: • format $end

    PP_CONFIG  shift, and go to state 1

    format       go to state 2
    format_term  go to state 3


State 1

    3 format_term: PP_CONFIG • ':' bits
    4            | PP_CONFIG • PP_VALUE ':' bits

    PP_VALUE  shift, and go to state 4
    ':'       shift, and go to state 5


State 2

    0 $accept: format • $end
    1 format: format • format_term

    $end       shift, and go to state 6
    PP_CONFIG  shift, and go to state 1

    format_term  go to state 7


State 3

    2 format: format_term •

    $default  reduce using rule 2 (format)


State 4

    4 format_term: PP_CONFIG PP_VALUE • ':' bits

    ':'  shift, and go to state 8


State 5

    3 format_term: PP_CONFIG ':' • bits

    PP_VALUE  shift, and go to state 9

    bits      go to state 10
    bit_term  go to state 11


State 6

    0 $accept: format $end •

    $default  accept


State 7

    1 format: format format_term •

    $default  reduce using rule 1 (format)


State 8

    4 format_term: PP_CONFIG PP_VALUE ':' • bits

    PP_VALUE  shift, and go to state 9

    bits      go to state 12
    bit_term  go to state 11


State 9

    7 bit_term: PP_VALUE • '-' PP_VALUE
    8         | PP_VALUE •

    '-'  shift, and go to state 13

    $default  reduce using rule 8 (bit_term)


State 10

    3 format_term: PP_CONFIG ':' bits •
    5 bits: bits • ',' bit_term

    ','  shift, and go to state 14

    $default  reduce using rule 3 (format_term)


State 11

    6 bits: bit_term •

    $default  reduce using rule 6 (bits)


State 12

    4 format_term: PP_CONFIG PP_VALUE ':' bits •
    5 bits: bits • ',' bit_term

    ','  shift, and go to state 14

    $default  reduce using rule 4 (format_term)


State 13

    7 bit_term: PP_VALUE '-' • PP_VALUE

    PP_VALUE  shift, and go to state 15


State 14

    5 bits: bits ',' • bit_term

    PP_VALUE  shift, and go to state 9

    bit_term  go to state 16


State 15

    7 bit_term: PP_VALUE '-' PP_VALUE •

    $default  reduce using rule 7 (bit_term)


State 16

    5 bits: bits ',' bit_term •

    $default  reduce using rule 5 (bits)
